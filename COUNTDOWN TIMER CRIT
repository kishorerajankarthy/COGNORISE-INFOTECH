import tkinter as tk
from tkinter import ttk
import time

class CountdownTimer:
    def __init__(self, root):
        self.root = root
        self.root.title("Countdown Timer")

        # Initialize time variables
        self.time_left = 0
        self.running = False

        # Create and place widgets
        self.create_widgets()

    def create_widgets(self):
        # Time input fields
        ttk.Label(self.root, text="Hours:").grid(row=0, column=0, padx=10, pady=10)
        self.hours_entry = ttk.Entry(self.root, width=5)
        self.hours_entry.grid(row=0, column=1, padx=10, pady=10)

        ttk.Label(self.root, text="Minutes:").grid(row=0, column=2, padx=10, pady=10)
        self.minutes_entry = ttk.Entry(self.root, width=5)
        self.minutes_entry.grid(row=0, column=3, padx=10, pady=10)

        ttk.Label(self.root, text="Seconds:").grid(row=0, column=4, padx=10, pady=10)
        self.seconds_entry = ttk.Entry(self.root, width=5)
        self.seconds_entry.grid(row=0, column=5, padx=10, pady=10)

        # Timer display
        self.timer_label = ttk.Label(self.root, text="00:00:00", font=("Arial", 30))
        self.timer_label.grid(row=1, column=0, columnspan=6, padx=10, pady=10)

        # Control buttons
        self.start_button = ttk.Button(self.root, text="Start", command=self.start_timer)
        self.start_button.grid(row=2, column=0, padx=10, pady=10)

        self.pause_button = ttk.Button(self.root, text="Pause", command=self.pause_timer)
        self.pause_button.grid(row=2, column=1, padx=10, pady=10)

        self.reset_button = ttk.Button(self.root, text="Reset", command=self.reset_timer)
        self.reset_button.grid(row=2, column=2, padx=10, pady=10)

    def start_timer(self):
        if not self.running:
            try:
                hours = int(self.hours_entry.get())
                minutes = int(self.minutes_entry.get())
                seconds = int(self.seconds_entry.get())
                self.time_left = hours * 3600 + minutes * 60 + seconds
                self.running = True
                self.update_timer()
            except ValueError:
                self.timer_label.config(text="Invalid input")
    
    def update_timer(self):
        if self.running and self.time_left > 0:
            self.time_left -= 1
            self.display_time()
            self.root.after(1000, self.update_timer)
        elif self.time_left == 0:
            self.running = False
            self.timer_label.config(text="Time's up!")
    
    def display_time(self):
        hours = self.time_left // 3600
        minutes = (self.time_left % 3600) // 60
        seconds = self.time_left % 60
        self.timer_label.config(text=f"{hours:02}:{minutes:02}:{seconds:02}")

    def pause_timer(self):
        self.running = False

    def reset_timer(self):
        self.running = False
        self.time_left = 0
        self.display_time()

# Run the application
if __name__ == "__main__":
    root = tk.Tk()
    timer = CountdownTimer(root)
    root.mainloop()
